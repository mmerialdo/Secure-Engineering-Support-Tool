/* --------------------------------------------------------------------------------------------------------------------
// Copyright file="VulnerabilityMapper.java"
//  © Copyright European Space Agency, 2018-2020
//
//  Author: Software developed by RHEA System S.A.
// 
//  This file is subject to the terms and conditions defined in file 'LICENSE.txt', which is part of this source code package. 
//  No part of the package, including this file, may be copied, modified, propagated, or distributed 
//  except according to the terms contained in the file ‘LICENSE.txt’.
// --------------------------------------------------------------------------------------------------------------------
*/

package org.crmf.persistency.mapper.vulnerability;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.crmf.persistency.domain.vulnerability.SestVulnerability;
import org.crmf.persistency.domain.vulnerability.SestVulnerabilityModel;

import java.util.List;

//This interface allows the bundle to invoke the SQL methods within the VulnerabilityMapper.xml (via the ibatis API)
@Mapper
public interface VulnerabilityMapper {

  void insert(SestVulnerabilityModel vulnerabilityModel);

  void update(@Param("vulnerabilityModelJson") String vulnerabilityModelJson, @Param("sestobjId") String sestobjId);

  SestVulnerabilityModel getByIdentifier(String sestobjId);

  SestVulnerabilityModel getById(Integer id);

  List<SestVulnerability> getVulnerabilityRepository(@Param("catalogue") String catalogue);

  void insertVulnerabilityRepository(SestVulnerability vulnerability);

  void insertVulnerabilityAssetRepository(@Param("sestobjId") String sestobjId, @Param("secondaryAssetCategory") String secondaryAssetCategory);

  void deleteVulnerabilityAssetRepository(@Param("sestobjId") String sestobjId);

  void updateVulnerabilityRepository(SestVulnerability vulnerability);

  Integer getVulnerabilityReferenceIdByCatalogueId(@Param("catalogueId") String catalogueId);

  String getVulnerabilityReferenceSestObjIdByCatalogueId(@Param("catalogueId") String catalogueId);

  String getReferenceCatalogueById(Integer id);

  void deleteVulnerabilityReference(@Param("sestobjIds") List<String> sestobjId);
}
