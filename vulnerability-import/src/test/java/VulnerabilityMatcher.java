import org.crmf.model.riskassessment.VulnerabilityModel;
import org.crmf.model.riskassessmentelements.Vulnerability;
import org.mockito.ArgumentMatcher;

import java.util.ArrayList;

public class VulnerabilityMatcher implements ArgumentMatcher<VulnerabilityModel> {

  private VulnerabilityModel vulnerability;

  public VulnerabilityMatcher(VulnerabilityModel vulnerability) {
    this.vulnerability = vulnerability;
  }

  @Override
  public boolean matches(VulnerabilityModel vulnerabilityToCompare) {
    ArrayList<Vulnerability> vulnerabilitiesToCompare = vulnerabilityToCompare.getVulnerabilities();
    if (vulnerability.getVulnerabilities().size() != vulnerabilitiesToCompare.size()) {
      return false;
    }

    for (Vulnerability vuln : vulnerability.getVulnerabilities()) {

      boolean foundMatch = false;
      for (Vulnerability vulnToCompare : vulnerabilitiesToCompare) {
        if (vuln.getCatalogueId().equals(vulnToCompare.getCatalogueId())) {
          foundMatch = true;
          if (!(vuln.getCatalogueId().equals(vulnToCompare.getCatalogueId()) &&
            vuln.getCatalogue().equals(vulnToCompare.getCatalogue()) &&
            vuln.getName().equals(vulnToCompare.getName()) &&
            vuln.getDescription().equals(vulnToCompare.getDescription()))) {
            return false;
          }
        }
      }
      if (!foundMatch) {
        return false;
      }
    }
    return true;
  }
}
