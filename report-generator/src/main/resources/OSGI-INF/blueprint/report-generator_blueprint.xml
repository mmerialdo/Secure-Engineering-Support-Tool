<?xml version="1.0" encoding="UTF-8"?>
<!-- This blueprint describes the needed dependencies for the sest-report-generator bundle and the exposed interfaces -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:camel="http://camel.apache.org/schema/blueprint" xmlns:cxf="http://cxf.apache.org/blueprint/core"
           xmlns:cxfrs="http://camel.apache.org/schema/blueprint/cxf"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xsi:schemaLocation="
		  http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		  http://www.osgi.org/xmlns/blueprint-ext/v1.1.0 https://svn.apache.org/repos/asf/aries/tags/blueprint-0.4.1/blueprint-core/src/main/resources/org/apache/aries/blueprint/ext/blueprint-ext.xsd  
		  http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd
		  http://cxf.apache.org/blueprint/core http://cxf.apache.org/schemas/blueprint/core.xsd
		  http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd
		  http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
		  http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <cm:property-placeholder id="SEST.placeholder"
                             persistent-id="SEST" />

    <reference id="procedureDBService" timeout="300000" availability="optional"
               interface="org.crmf.persistency.mapper.project.AssprocedureServiceInterface"/>

    <reference id="projectDBService" timeout="300000" availability="optional"
               interface="org.crmf.persistency.mapper.project.AssprojectServiceInterface"/>

    <reference id="auditDBService" timeout="300000" availability="optional"
               interface="org.crmf.persistency.mapper.audit.AssAuditServiceInterface"/>

    <reference id="securityPolicyCustom"
               interface="org.crmf.proxy.authnauthz.ShiroSecurityPolicyCustomInterface"/>

    <bean id="reportGeneratorBean"
          class="org.crmf.reportgenerator.manager.ReportGeneratorInput">
        <property name="assprocedureService" ref="procedureDBService"></property>
        <property name="reportGeneratorDOCX" ref="reportGeneratorDOCX"></property>
        <property name="reportGeneratorLightDOCX" ref="reportGeneratorLightDOCX"></property>
        <property name="reportGeneratorISO" ref="reportGeneratorISO"></property>
        <property name="assprojectService" ref="projectDBService"></property>
        <property name="auditService" ref="auditDBService"></property>
    </bean>

    <bean id="reportGeneratorDOCX"
          class="org.crmf.reportgenerator.manager.ReportGeneratorDOCX">
    </bean>

    <bean id="reportGeneratorLightDOCX"
          class="org.crmf.reportgenerator.manager.ReportGeneratorLightDOCX">
    </bean>

    <bean id="reportGeneratorISO"
          class="org.crmf.reportgenerator.manager.ReportGeneratorISO">
    </bean>

    <bean id="reportGeneratorProcessor"
          class="org.crmf.reportgenerator.rest.ReportGeneratorProcessor">
        <property name="reportgeneratorInput" ref="reportGeneratorBean"></property>
    </bean>

    <bean id="reportGeneratorRest"
          class="org.crmf.reportgenerator.rest.ReportGeneratorRestServer">
        <property name="reportgeneratorInput" ref="reportGeneratorBean"></property>
    </bean>

    <bean id="gsonGenericFilter" class="org.apache.camel.component.gson.GsonDataFormat">
        <property name="unmarshalType" value="org.crmf.model.utility.GenericFilter"/>
    </bean>

    <bean id="cors-filter"
          class="org.apache.cxf.rs.security.cors.CrossOriginResourceSharingFilter"/>

    <cxfrs:rsServer id="rsServer" address="/report"
                    serviceClass="org.crmf.reportgenerator.rest.ReportGeneratorRestServer"
                    loggingFeatureEnabled="true" loggingSizeLimit="200">
        <cxfrs:providers>
            <ref component-id="cors-filter"/>
        </cxfrs:providers>
    </cxfrs:rsServer>

    <camelContext id="reportGeneratorCamelContext"
                  streamCache="true" trace="true" xmlns="http://camel.apache.org/schema/blueprint">

        <route id="generateReport">
            <from uri="jetty:https://0.0.0.0:9090/report/edit?enableCORS=true"/>
            <log message="generateReport ${body}" loggingLevel="INFO"/>
            <unmarshal ref="gsonGenericFilter"/>
            <log message="generateReport before ${body}" loggingLevel="INFO"/>

            <setHeader headerName="permission">
                <simple>AssessmentProcedure:Read</simple>
            </setHeader>
            <policy ref="securityPolicyCustom">
                <bean ref="reportGeneratorRest" method="editReport"/>
                <log message="generateReport after ${body}" loggingLevel="INFO"/>
            </policy>
        </route>

        <route id="generateLightReport">
            <from uri="jetty:https://0.0.0.0:9090/report/editLight?enableCORS=true"/>
            <log message="generateLightReport ${body}" loggingLevel="INFO"/>
            <unmarshal ref="gsonGenericFilter"/>
            <log message="generateLightReport before ${body}" loggingLevel="INFO"/>

            <setHeader headerName="permission">
                <simple>AssessmentProcedure:Read</simple>
            </setHeader>
            <policy ref="securityPolicyCustom">
                <bean ref="reportGeneratorRest" method="editLightReport"/>
                <log message="generateLightReport after ${body}" loggingLevel="INFO"/>
            </policy>
        </route>

        <route id="generateISOReport">
            <from uri="jetty:https://0.0.0.0:9090/report/editISO?enableCORS=true"/>
            <log message="generateISOReport ${body}" loggingLevel="INFO"/>
            <unmarshal ref="gsonGenericFilter"/>
            <log message="generateISOReport before ${body}" loggingLevel="INFO"/>

            <setHeader headerName="permission">
                <simple>AssessmentProcedure:Read</simple>
            </setHeader>
            <policy ref="securityPolicyCustom">
                <bean ref="reportGeneratorRest" method="editISOReport"/>
                <log message="generateISOReport after ${body}" loggingLevel="INFO"/>
            </policy>
        </route>

        <route id="downloadReportCXF">
            <from uri="cxfrs:bean:rsServer"/>
            <log message="=================== Downloading file ================== "
                 loggingLevel="INFO"/>
            <!--from uri="cxfrs:bean:rsServer2" /-->
            <process ref="reportGeneratorProcessor"/>
            <log message="=================== Downloading file ================== "
                 loggingLevel="INFO"/>
        </route>

    </camelContext>
</blueprint>

